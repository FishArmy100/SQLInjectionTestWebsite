@page "/"
@using SQLInjectionTestWebsite.Shared
@using SQLInjectionTestWebsite.Shared.Components
@using SQLInjectionTestWebsite.Shared.SQL
@using System.Data.SQLite
@using System.Reflection;
@inject NavigationManager Navigation;

<NavBar CurrentPageName="Home"></NavBar>

<div id="searchbar">
	<SearchBar OnMessageSearched = "OnSearchProduct"/>
</div>

<button @onclick="CreateDatabase">Create Database</button>
<button @onclick="OnClearStoreDatabase">Clear Store Database</button>

@code {
	void OnSearchProduct(string name)
	{
		Navigation.NavigateTo("/ProductPage/" + name);
	}

	void CreateDatabase()
	{
		AccountInfo info = new AccountInfo("Bob", "234", "bobbob@gmail.com", "444-555-666", "bobbob", 0, false);
		Console.WriteLine("Created account: " + WebsiteDatabase.TryCreateAccount(info));

		AccountInfo gottenAccount = WebsiteDatabase.TryGetAccount("Bob", "234").Value;
		Console.WriteLine("Got account: " + gottenAccount.UserName + ", Balance = " + gottenAccount.CurrentBalance);

		Console.WriteLine("Updated ballance: " + WebsiteDatabase.UpdateAccountBallance("Bob", "234", 50));
		gottenAccount = WebsiteDatabase.TryGetAccount("Bob", "234").Value;
		Console.WriteLine("New ballance = " + gottenAccount.CurrentBalance);
	}

	void OnClearStoreDatabase()
	{
		SQLiteDatabase database = new SQLiteDatabase(WebsiteDatabase.DatabaseName);
		database.DropTable(WebsiteDatabase.ProductsTableName);
		database.DropTable(WebsiteDatabase.AccountsTableName);
	}

	private static SQLiteConnection GetConnection(string databaseName)
	{
		string location = Assembly.GetExecutingAssembly().Location;
		string? folder = Path.GetDirectoryName(location);
		string uri = $"{folder}\\{databaseName}.db";
		return new SQLiteConnection($"URI=file:{uri}");
	}
}
