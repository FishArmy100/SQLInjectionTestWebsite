@page "/AdminPage"
@using SQLInjectionTestWebsite.Shared.Components
@using SQLInjectionTestWebsite.Shared
@using System.ComponentModel
@using System.ComponentModel.DataAnnotations

<NavBar CurrentPageName="Admin"/>
<h3>AdminPage</h3>

<button @onclick="@(()=>m_ProductEditorState = ProductEditorState.AddingNewProduct)">Add  New Product</button>
<button @onclick="@(()=>m_ProductEditorState = ProductEditorState.EditingProduct)">Edit Product</button>
@if(m_ProductEditorState == ProductEditorState.AddingNewProduct)
{
	<div style="border:solid; border-color:grey">
		<UserInputForm Object="m_ProductModel" OnValidFormSubmit="OnNewProductAdded" />
	</div>
}

@if(m_ProductEditorState == ProductEditorState.EditingProduct)
{
	<SearchBar OnMessageSearched="OnProductSearched"/>
	
	var products = !string.IsNullOrEmpty(m_SearchedString) ?
						WebsiteDatabase.GetProducts(m_SearchedString) :
						WebsiteDatabase.GetAllProducts();

	foreach (ProductInfo product in products)
	{
		<AdminProduct Product="product"/>
		<br />
	}
}

@code {
	private ProductEditorState m_ProductEditorState = ProductEditorState.None;
	private InputProductModel m_ProductModel = new InputProductModel();
	private string? m_SearchedString = null;

	private void OnNewProductAdded(InputProductModel model)
	{
		string id = Guid.NewGuid().ToString();
		ProductInfo product = new ProductInfo(model.Name, model.Cost, model.Description, id, 0);
		WebsiteDatabase.AddProduct(product);
		m_ProductEditorState = ProductEditorState.None;
		m_ProductModel = new InputProductModel();
		StateHasChanged();
	}

	protected override void OnInitialized()
	{
		WebsiteDatabase.ProductsUpdated += async (_, _) => { await InvokeAsync(StateHasChanged); };
	}

	private void OnProductSearched(string searchTerm)
	{
		m_SearchedString = searchTerm;
		StateHasChanged();
	}

	enum ProductEditorState
	{
		None,
		AddingNewProduct,
		EditingProduct
	}

	class InputProductModel
	{
		[Required]
		public string Name { get; set; } = "";

		[Required]
		public float Cost { get; set; }

		[Required]
		[DataType(DataType.MultilineText)]
		public string Description { get; set; } = "";
	}
}
